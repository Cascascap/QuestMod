void Ｔ初期化()
{
	LOG_TADA("■Ｔ初期化\n");
	LOG_TADA("　・・・・・　起動時の初期中　・・・・・\n");
	if (FA[2] == 1)
	{
		LOG_TADA("ＥＲＲＯＲ　　　初期化に２回きちっゃてますよ！\n");
		return;
	}
	FA[2] = 1;
	FA[101] = 1000;
	FA[340] = 1;
	◆ワールド = 1;
	◆追加キット = 1;
	◆プラスキット = 1;
	◆音楽セット = 0;
	if (ＣＧモード_確認(3220) == true)
	{
		◆音楽セット = 1;
	}
	◆ＣＧモードの表示総数 = 219;
	int ii = 0;
	int iic = 0;
	int loop = 0;
	int a1 = 0;
	int a2 = 0;
	int ▲exp = 100;
	int ▲倍率 = 0;
	ＬＶＥＸＰ[1] = 100;
	for (loop = 2; loop < 101; ++loop)
	{
		▲倍率 = 120;
		if (loop >= 35)
		{
			▲倍率 = 115;
		}
		if (loop >= 50)
		{
			▲倍率 = 106;
		}
		if (▲倍率 == 120)
		{
			▲exp = ▲exp * 1.20000004768372;
		}
		if (▲倍率 == 115)
		{
			▲exp = ▲exp * 1.14999997615814;
		}
		if (▲倍率 == 112)
		{
			▲exp = ▲exp * 1.12000000476837;
		}
		if (▲倍率 == 106)
		{
			▲exp = ▲exp * 1.05999994277954;
		}
		if (▲exp >= 99999999)
		{
			▲exp = 99999999;
		}
		if (▲exp > 9999)
		{
			▲exp = ▲exp - ▲exp % 100;
		}
		if (▲exp > 99999)
		{
			▲exp = ▲exp - ▲exp % 1000;
		}
		if (▲exp > 999999)
		{
			▲exp = ▲exp - ▲exp % 10000;
		}
		ＬＶＥＸＰ[loop] = ▲exp;
	}
	Ｓ起動時登録();
	Ｉ初起動時登録();
	int iiq = 0;
	for (iiq = 1; iiq < 302; ++iiq)
	{
		Ｑ初期化(iiq);
	}
	Ｑ起動時登録(0);
	Ｑ状態(25, 1);
	if (system.IsDebugMode() == 1)
	{
		Ｑ状態(10, 1);
	}
	城起動時登録();
	マメ知識／起動時登録();
	MM[1] = 1;
	MM[2] = 1;
	顔ＣＧ登録初期化();
	iic = Ｃ生成(1);
	if (iic != 0)
	{
		ＰＴＡ登録(iic, 2);
	}
	iic = Ｃ生成(19);
	if (iic != 0)
	{
		ＰＴＡ登録(iic, 1);
	}
	iic = Ｃ生成(22);
	Ｃ全員補給();
	FA[100] = 3000;
	FA[120] = RAND(3);
	FA[225] = 1;
	FA[61] = 1;
	FA[62] = 1;
	FA[63] = 1;
	FA[64] = 1;
	FA[65] = 1;
	FA[66] = 1;
	FA[67] = 1;
	FA[68] = 1;
	FA[69] = 1;
	FA[70] = 1;
	FA[202] = 1;
	FA[203] = 1;
	FA[204] = 1;
	FA[205] = 1;
	FA[206] = 1;
	EV("アリス／新バージョン説明", 1);
}

void Ｔロード直後処理(lint fg)
{
	LOG("■Now launching Rance Quest ver %s~■\n" % string(FA[101]));
	LOG("  ※This version takes Rance Quest (2011) and Magnum (2012) as a single set\n");
	LOG("  ※and makes some adjustments to balance and design to reflect that.\n");
	LOG("  ※　　　　　　　　　!sober-　2020/02/31\n");
	if (◆２倍モード == 1)
	{
		LOG("\n  (Running in TADA mode)\n");
	}
	FA[101] = 1000;
	◆プラスキット = 1;
	FA[340] = 1;
	Ｓ起動時登録();
	Ｑ起動時登録(0);
	マメ知識／起動時登録();
	各種調整処理();
	FA[227] = ◆金;
	FA[228] = 0;
	FA[229] = 0;
	FA[331] = 331;
	LOG_TADA("　チェックＦＡ＝" + string(FA[331]) + " " + string(331) + "\n");
	RegenerateAllCharacterTextData();
	RegenerateAllItemText();
}

void Ｔセーブ直前処理()
{
	チートチェック();
}

lint チートチェック()
{
	LOG_TADA("■チートチェック\n");
	LOG_TADA("◆金＝" + string(◆金) + "\n");
	LOG_TADA("計算上の金＝" + string((FA[227] + FA[228]) - FA[229]) + "（元＝" + string(FA[227]) + "＋拾った＝" + string(FA[228]) + "）\n");
	return 0;
}

void ワールド切り替え処理()
{
	int iiq = 0;
	int iic = 0;
	int ii = 0;
	int ▲修正レベル = 0;
	int ▲難易度修正 = 0;
	FA[327] = 1;
	for (iiq = 1; iiq < 302; ++iiq)
	{
		Ｑ初期化(iiq);
		■Ｍ／フラグＡ(iiq, 0, "");
	}
	Ｓ起動時登録();
	Ｑ起動時登録(0);
	Ｒ８不要クエスト倉庫を空に();
	Ｑ状態(25, 1);
	if (system.IsDebugMode() == 1)
	{
		Ｑ状態(10, 1);
	}
	EV全クリア();
	if (FA[101] >= 1200)
	{
		EV("アリス／新バージョン説明", 1);
	}
	ＣＳ削除(Ｃ番号取得(24), 361);
	ＣＳ削除(Ｃ番号取得(22), 366);
	ＣＳ削除(Ｃ番号取得(1), 365);
	for (iic = 20; iic < 201; ++iic)
	{
		ＣＦＡ(iic, 34, 0);
	}
	Ｉ固有番号で削除(262, 0);
	Ｉ固有番号で削除(263, 0);
	Ｉ固有番号で削除(259, 0);
	Ｉ固有番号で削除(260, 0);
	Ｉ固有番号で削除(261, 0);
	Ｉ固有番号で削除(255, 0);
	Ｉ固有番号で削除(256, 0);
	Ｉ固有番号で削除(257, 0);
	Ｉ固有番号で削除(258, 0);
	Ｉ固有番号で削除(267, 0);
	if (◆ワールド == 3)
	{
		for (ii = 1; ii < 3001; ++ii)
		{
			if (Ｉ存在(ii, -1) != 0 && Ｉ外せません(ii, -1) == 1)
			{
				Ｉ外せません(ii, 0);
				Ｉ情報(ii, "自動生成");
			}
		}
	}
	◆名声ランク = ◆名声ランク / 3;
	◆名声 = 0;
	Ｔ名声最大書き換え();
	◆寄付 = 0;
	◆寄付ボーナス = 25;
	◆クエストクリア数 = 0;
	◆ランス城オープン = 0;
	FA[51] = 0;
	FA[4] = 0;
	FA[13] = 0;
	FA[11] = 0;
	FA[10] = 0;
	FA[8] = 0;
	FA[84] = 0;
	FA[9] = 0;
	FA[12] = 0;
	FA[7] = 0;
	FA[6] = 0;
	FA[5] = 0;
	FA[181] = 0;
	FA[195] = 0;
	FA[196] = 0;
	FA[197] = 0;
	FA[198] = 0;
	FA[199] = 0;
	FA[254] = 0;
	FA[106] = 0;
	FA[109] = 0;
	FA[50] = 0;
	FA[107] = 0;
	FA[130] = 0;
	FA[144] = 0;
	FA[154] = 0;
	FA[224] = 11;
	FA[304] = 0;
	FA[261] = 0;
	FA[188] = 0;
	FA[200] = 0;
	FA[201] = 0;
	FA[263] = 0;
	gランスの部屋 = 5020;
	gランスの部屋／夜 = 5021;
	gランスの部屋／無灯 = 5022;
	gランスの部屋／夕方 = 5023;
	gランスの廊下 = 5322;
	gＭ = 5610;
	g町全景 = 5500;
	g町全景／夜 = 5570;
	if (◆ワールド == 2)
	{
		Ｉワールド２の店商品追加();
	}
	if (◆ワールド == 3)
	{
		Ｉワールド３の店商品追加();
	}
}

void 各種調整処理()
{
	LOG_TADA("■各種調整処理\n");
	◆追加キット = 1;
	if (Ｃ番号取得(64) != 0)
	{
		Ｃ削除(Ｃ番号取得(64));
	}
	if (Ｃ番号取得(63) != 0)
	{
		Ｃ削除(Ｃ番号取得(63));
	}
	if (FA[120] == 0)
	{
		FA[120] = 1;
	}
	if (FA[224] == 0)
	{
		FA[224] = 11;
	}
	if (EV("ランス城／ポスター回収／初", -2147483648) == true)
	{
		FA[264] = 1;
	}
	if (EV("町歩き／あてな２号", -2147483648) == true)
	{
		ＣＦＡ(Ｃ番号取得(27), 34, 1);
	}
	Ｑ状態(106, 0);
	Ｑ状態(144, 0);
	Ｑ状態(216, 0);
	Ｑ状態(217, 0);
	Ｑ状態(218, 0);
	Ｑ状態(219, 0);
	Ｑ状態(220, 0);
	Ｑ状態(225, 0);
	if (◆アイテム補充数[340] == 0)
	{
		◆アイテム補充数[340] = 1;
	}
	if (◆アイテム補充数[341] == 0)
	{
		◆アイテム補充数[341] = 1;
	}
	MM[43] = 1;
	MM[88] = 1;
	if (FA[263] == 1)
	{
		MM[51] = 1;
	}
	MM[91] = 1;
	MM[56] = 1;
	if (クリア確認(36) == 1)
	{
		MM[52] = 1;
	}
	if (クリア確認(46) == 1)
	{
		MM[54] = 1;
	}
	if (クリア確認(76) == 1)
	{
		MM[92] = 1;
	}
	if (Ｃ有無(18) != 0)
	{
		MM[48] = 1;
	}
	MM[93] = 0;
	MM[53] = 0;
	MM[57] = 0;
	int ii = 0;
	int aa = 0;
	int iic = 0;
	for (ii = 1; ii < 3001; ++ii)
	{
		if (◆ワールド == 3)
		{
			if (Ｉ固有番号(ii, -1) == 100 && Ｉ機能(ii, 4, -1) == 82)
			{
				Ｉ機能(ii, 4, 0);
				Ｉ情報(ii, "自動生成");
			}
		}
		if (Ｉ存在(ii, -1) >= 20)
		{
			aa = 0;
			if (Ｃ番号(Ｉ存在(ii, -1), -1) != 0 && Ｃ武器(Ｉ存在(ii, -1), -1) == ii)
			{
				aa = 1;
			}
			if (Ｃ番号(Ｉ存在(ii, -1), -1) != 0 && Ｃ防具(Ｉ存在(ii, -1), -1) == ii)
			{
				aa = 1;
			}
			if (Ｃ番号(Ｉ存在(ii, -1), -1) != 0 && Ｃ持ち物(Ｉ存在(ii, -1), -1) == ii)
			{
				aa = 1;
			}
			if (Ｃ番号(Ｉ存在(ii, -1), -1) != 0 && Ｃオプション(Ｉ存在(ii, -1), -1) == ii)
			{
				aa = 1;
			}
			if (aa == 0)
			{
				LOG_TADA("　調整　→　アイテム：" + Ｉ名前(ii, "") + "を消しました\n");
				Ｉ削除(ii);
			}
		}
	}
}

