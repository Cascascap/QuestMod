CStaffData::CStaffData()
{
	this.Init();
}

CStaffData::~CStaffData()
{
	this.Release();
}

void CStaffData::Init()
{
	this.m_StaffJobLineCount = 0;
}

void CStaffData::Release()
{
	this.m_StaffName.Release();
	this.m_StaffJob.Release();
}

void CStaffData::SetStaff(string StaffName, string Job)
{
	this.m_StaffName.SetFont(257, 34, 140, 255, 100, 0, 190, 100);
	this.m_StaffName.SetText("　" + StaffName, "≪" + StaffName + "≫―――――――――――――");
	this.m_StaffName.SetShiftSize(1);
	bool lineIsLong = false;
	array@string lines;
	SplitString(Job, "\n", lines);
	int i = 0;
	for (i = 0; i < lines.Numof(); ++i)
	{
		if (lines[i].LengthByte() > 25)
		{
			lineIsLong = true;
			break;
		}
	}
	int fontSize = 34;
	if (lineIsLong)
	{
		fontSize = 30;
	}
	this.m_StaffJob.SetFont(257, fontSize, 140, 255, 100, 0, 190, 100);
	this.m_StaffJob.SetText(Job, "");
	this.m_StaffJob.SetShiftSize(1);
	this.m_StaffJobLineCount = this.GetLineCount(Job);
}

int CStaffData::GetHeight()
{
	int JobHeight = 34 * this.m_StaffJobLineCount;
	return 62 + JobHeight + 56;
}

int CStaffData::GetLineCount(string Text)
{
	int i = 0;
	int Count;
	for (Count = 1; i < Text.Length(); ++i)
	{
		if (Text[i] == '\n')
		{
			++Count;
		}
	}
	return Count;
}

void CStaffData::UpdatePos(int PosX, int PosY)
{
	int StaffNameX = PosX;
	int StaffNameY = PosY;
	int StaffJobX = PosX + 48;
	int StaffJobY = PosY + 62;
	this.m_StaffName.SetPos(StaffNameX, StaffNameY);
	this.m_StaffJob.SetPos(StaffJobX, StaffJobY);
}

void CStaffData::UpdateZ(int PosZ)
{
	this.m_StaffName.SetZ(PosZ);
	this.m_StaffJob.SetZ(PosZ);
}

