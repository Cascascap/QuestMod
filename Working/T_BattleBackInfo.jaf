int compBattleBackInfo(ref T_BattleBackInfo sInfo1, ref T_BattleBackInfo sInfo2)
{
	if (sInfo1.m_nNo < sInfo2.m_nNo)
	{
		return -1;
	}
	if (sInfo1.m_nNo > sInfo2.m_nNo)
	{
		return 1;
	}
	return 0;
}

T_BattleBackInfo::T_BattleBackInfo()
{
	this.clear();
}

void T_BattleBackInfo::clear()
{
	this.m_nNo = 0;
	this.m_szName = "";
	this.m_nPixelColorR = 0;
	this.m_nPixelColorG = 0;
	this.m_nPixelColorB = 0;
	this.m_nAlpha = 0;
	this.m_nDrawFilter = 0;
	this.m_szComment = "";
}

bool T_BattleBackInfo::setColor(ref T_ColorInfo rfsColor)
{
	if (rfsColor === NULL)
	{
		return false;
	}
	this.m_nPixelColorR = rfsColor.m_nPixelColorR;
	this.m_nPixelColorG = rfsColor.m_nPixelColorG;
	this.m_nPixelColorB = rfsColor.m_nPixelColorB;
	this.m_nAlpha = rfsColor.m_nAlpha;
	this.m_nDrawFilter = rfsColor.m_nDrawFilter;
	return true;
}

bool T_BattleBackInfo::getColor(ref T_ColorInfo rfsColor)
{
	if (rfsColor === NULL)
	{
		return false;
	}
	rfsColor.m_nPixelColorR = this.m_nPixelColorR;
	rfsColor.m_nPixelColorG = this.m_nPixelColorG;
	rfsColor.m_nPixelColorB = this.m_nPixelColorB;
	rfsColor.m_nAlpha = this.m_nAlpha;
	rfsColor.m_nDrawFilter = this.m_nDrawFilter;
	return true;
}

int T_BattleBackInfoManager::getIndex(int nNo)
{
	return this.search(nNo);
}

int T_BattleBackInfoManager::getCount()
{
	return this.m_asList.Numof();
}

T_BattleBackInfoManager::T_BattleBackInfoManager()
{
}

bool T_BattleBackInfoManager::init()
{
	int nRet = this.load();
	if (nRet < 0)
	{
		return false;
	}
	return true;
}

int T_BattleBackInfoManager::select()
{
	return 0;
}

bool T_BattleBackInfoManager::setColor(int nNo, ref T_ColorInfo rfsColor, bool bSave)
{
	if (rfsColor === NULL)
	{
		return false;
	}
	ref T_BattleBackInfo rfInfo = this.get(nNo);
	if (rfInfo === NULL)
	{
		return false;
	}
	rfInfo.setColor(rfsColor);
	if (bSave)
	{
		this.save();
	}
	return true;
}

int T_BattleBackInfoManager::getNo(string szName)
{
	int idx = this.searchFromName(szName);
	if (idx < 0)
	{
		return 0;
	}
	return this.m_asList[idx].m_nNo;
}

string T_BattleBackInfoManager::getName(int nNo)
{
	ref T_BattleBackInfo rfInfo = this.get(nNo);
	if (rfInfo === NULL)
	{
		return "";
	}
	return rfInfo.m_szName;
}

ref T_BattleBackInfo T_BattleBackInfoManager::get(int nNo)
{
	int idx = this.search(nNo);
	if (idx < 0)
	{
		return NULL;
	}
	return this.m_asList[idx];
}

ref T_BattleBackInfo T_BattleBackInfoManager::getFromIndex(int nIndex)
{
	if (nIndex < 0 || nIndex >= this.m_asList.Numof())
	{
		return NULL;
	}
	return this.m_asList[nIndex];
}

int T_BattleBackInfoManager::load()
{
	if (!this.m_asList.Empty())
	{
		this.m_asList.Free();
	}
	if (this.loadAcx())
	{
		return 0;
	}
	return -1;
}

bool T_BattleBackInfoManager::loadAcx()
{
	bool bRet = false;
	if (!Ç`ÇbÇw_ÉçÅ[Éh("Data\\" + "BattleBackground.acx"))
	{
		return false;
	}
	int cnt = Ç`ÇbÇw_çsêî();
	if (cnt <= 0)
	{
		bRet = true;
		goto label0;
	}
	int i = 0;
	T_BattleBackInfo sInfo;
	for (i = 0; i < cnt; ++i)
	{
		if (!Ç`ÇbÇw_êÌì¨îwåièÓïÒ(i, sInfo))
		{
			system.Error("êÌì¨îwåièÓïÒÇ…åÎÇËÇ™Ç†ÇËÇ‹Ç∑");
			goto label0;
		}
		this.m_asList.PushBack(sInfo);
	}
	this.m_asList.Sort(&compBattleBackInfo);
	bRet = true;
label0:
	Ç`ÇbÇw_âï˙();
	return bRet;
}

int T_BattleBackInfoManager::loadText()
{
	return -1;
}

bool T_BattleBackInfoManager::save()
{
	return true;
}

bool T_BattleBackInfoManager::add(string szName)
{
	return true;
}

int T_BattleBackInfoManager::search(int nNo)
{
	int i = 0;
	int cnt = this.m_asList.Numof();
	for (i = 0; i < cnt; ++i)
	{
		if (this.m_asList[i].m_nNo == nNo)
		{
			return i;
		}
	}
	return -1;
}

int T_BattleBackInfoManager::searchFromName(string szName)
{
	int i = 0;
	int cnt = this.m_asList.Numof();
	for (i = 0; i < cnt; ++i)
	{
		if (this.m_asList[i].m_szName == szName)
		{
			return i;
		}
	}
	return -1;
}

void T_BattleBackInfoManager::output()
{
	return;
}

